!(function (e) {
  "use strict";
  (YKJS.animatedBlock = {
    init: function () {
      e(".yk-animated-block").each(function () {
        var t = e(this);
        YKJS.window.on("yk.change-slide", function () {
          t.removeClass("animated"),
            t.parents(".yk-section").hasClass("active") &&
              t.addClass("animated");
        });
      });
    },
  }),
    YKJS.animatedBlock.init();
})(jQuery),
  (function (e) {
    "use strict";
    (YKJS.contactForm = {
      init: function () {
        if (void 0 !== e.fn.validate) {
          e(".yk-contact-form").each(function () {
            var t = e(this),
              n = t.find(".message.success"),
              i = t.find(".message.danger");
            t.validate({
              errorClass: "error",
              submitHandler: function (t) {
                e.ajax({
                  type: "POST",
                  url: "handler.php",
                  data: new FormData(t),
                  cache: !1,
                  contentType: !1,
                  processData: !1,
                  success: function () {
                    n.fadeIn(),
                      setTimeout(function () {
                        n.fadeOut();
                      }, 5e3);
                  },
                  error: function () {
                    i.fadeIn(),
                      setTimeout(function () {
                        i.fadeOut();
                      }, 5e3);
                  },
                });
              },
            });
          });
        }
      },
    }),
      YKJS.contactForm.init();
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.counterUp = {
      init: function () {
        if (void 0 !== e.fn.numerator) {
          e(".yk-counter-up, .yk-counter-up-small").each(function () {
            var t = e(this),
              n = t.data("animation-speed") || 1e3,
              i = t.data("ending-number") || 0,
              a = t.data("delimiter") || !1;
            YKJS.window.on("yk.change-slide", function () {
              if (t.parents(".yk-section").hasClass("active")) {
                var e = t.find(".counter").html("0");
                setTimeout(function () {
                  e.numerator({
                    easing: "linear",
                    duration: n,
                    delimiter: a,
                    toValue: i,
                  });
                }, 500);
              }
            });
          });
        }
      },
    }),
      YKJS.counterUp.init();
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.customCursor = {
      init: function () {
        if (e(".yk-is--custom-cursor").length) {
          YKJS.body.append(
            '<div class="yk-custom-cursor"><div class="circle"><span></span></div></div>'
          );
          var t = e(".yk-custom-cursor"),
            n = t.find(".circle"),
            i = { x: 0, y: 0 },
            a = { x: 0, y: 0 },
            o = 0.25;
          "undefined" != typeof gsap &&
            (gsap.set(n, { xPercent: -50, yPercent: -50 }),
            YKJS.document.on("mousemove", function (e) {
              var t = window.pageYOffset || document.documentElement.scrollTop;
              (i.x = e.pageX), (i.y = e.pageY - t);
            }),
            gsap.ticker.add(function () {
              (a.x += (i.x - a.x) * o),
                (a.y += (i.y - a.y) * o),
                gsap.set(n, { x: a.x, y: a.y });
            }),
            YKJS.document
              .on("mousedown", function () {
                gsap.to(n, 0.3, { scale: 0.7 });
              })
              .on("mouseup", function () {
                gsap.to(n, 0.3, { scale: 1 });
              }),
            YKJS.document
              .on(
                "mouseenter",
                "input, textarea, select, .yk-video-button > a",
                function () {
                  gsap.to(n, 0.3, { scale: 0, opacity: 0 });
                }
              )
              .on(
                "mouseleave",
                "input, textarea, select, .yk-video-button > a",
                function () {
                  gsap.to(n, 0.3, { scale: 1, opacity: 0.1 });
                }
              ),
            YKJS.document
              .on("mouseenter", 'a, button, [role="button"]', function () {
                gsap.to(n, 0.3, { height: 60, width: 60 });
              })
              .on("mouseleave blur", 'a, button, [role="button"]', function () {
                gsap.to(n, 0.3, { height: 15, width: 15 });
              }),
            YKJS.document
              .on("mouseenter", "[data-cursor]", function () {
                var t = e(this);
                gsap.to(n, 0.3, {
                  height: 80,
                  width: 80,
                  opacity: 1,
                  onStart: function () {
                    n.find("span").html(t.attr("data-cursor"));
                  },
                });
              })
              .on("mouseleave", "[data-cursor]", function () {
                gsap.to(n, 0.3, {
                  height: 15,
                  width: 15,
                  opacity: 0.1,
                  onStart: function () {
                    n.find("span").html("");
                  },
                });
              }));
        }
      },
    }),
      YKJS.isMobile.any() || YKJS.customCursor.init();
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.fullpageSlider = {
      init: function () {
        function t() {
          s.find(".pp-section.active").scrollTop() > 0
            ? e(".yk-navbar").addClass("yk-navbar--solid")
            : e(".yk-navbar").removeClass("yk-navbar--solid");
        }
        function n() {
          r.find("li:first-child").addClass("active").end().addClass("is-show");
        }
        function i() {
          switch (s.find(".yk-section.active").data("brightness")) {
            case "light":
              YKJS.html.removeClass("is-light").addClass("is-dark");
              break;
            case "dark":
              YKJS.html.removeClass("is-dark").addClass("is-light");
          }
        }
        function a(e, t) {
          switch (e) {
            case "down":
              r.find("li:nth-child(" + t + ")")
                .prevAll()
                .addClass("prev");
              break;
            case "up":
              r.find("li:nth-child(" + t + ")").removeClass("prev");
          }
        }
        function o() {
          var e = s.find(".yk-section.active"),
            t = e.index();
          0 == t
            ? l.html(
                '<a href="#"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="square" stroke-linejoin="round"><line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline></svg></a>'
              )
            : l.html(YKJS.addLedingZero(t + 1));
        }
        if (void 0 !== e.fn.pagepiling) {
          var s = e(".yk-fullpage-slider"),
            r = s.find(".yk-fullpage-slider-progress-bar"),
            l = s.find(".yk-fullpage-slider-numbers"),
            c = !!s.data("loop-top"),
            u = !!s.data("loop-bottom"),
            d = s.data("speed") || 800,
            f = [];
          YKJS.body.css("overflow", "hidden"),
            YKJS.html.css("overflow", "hidden"),
            s.find("[data-anchor]").each(function () {
              f.push(e(this).data("anchor"));
            }),
            t(),
            s.pagepiling({
              menu: ".yk-offcanvas-menu ul.sf-menu, .yk-fullpage-slider-progress-bar",
              scrollingSpeed: d,
              loopTop: c,
              loopBottom: u,
              anchors: f,
              sectionSelector: ".yk-section",
              navigation: !1,
              afterRender: function () {
                n(), i(), o(), YKJS.window.trigger("yk.change-slide");
              },
              onLeave: function (e, t, n) {
                i(), a(n, t), o(), YKJS.window.trigger("yk.change-slide");
              },
              afterLoad: function (e, n) {
                r.find("li.active").prevAll().addClass("prev"), t();
              },
            }),
            l.on("click", ">a", function (t) {
              t.preventDefault(), e.fn.pagepiling.moveSectionDown();
            }),
            s.find(".pp-scrollable").on("scroll", function () {
              e(this).scrollTop() > 0
                ? e(".yk-navbar").addClass("yk-navbar--solid")
                : e(".yk-navbar").removeClass("yk-navbar--solid");
            });
        }
      },
    }),
      YKJS.fullpageSlider.init();
  })(jQuery),
  (function (e) {
    "use strict";
    var t = !1;
    (YKJS.menuOffcanvas = {
      config: { easing: "power2.out" },
      init: function () {
        var n = e(".yk-offcanvas-menu"),
          i = n.find("ul.sf-menu"),
          a = i.find("> li"),
          o = e(".yk-offcanvas-menu__header"),
          s = e(".yk-offcanvas-menu__footer > div"),
          r = e(".js-offcanvas-menu-open"),
          l = e(".js-offcanvas-menu-close"),
          c = e(".yk-site-overlay");
        void 0 !== e.fn.superclick &&
          i.superclick({
            delay: 300,
            cssArrows: !1,
            animation: { opacity: "show", height: "show" },
            animationOut: { opacity: "hide", height: "hide" },
          }),
          r.on("click", function (e) {
            e.preventDefault(),
              t || YKJS.menuOffcanvas.open_menu(n, c, a, o, s);
          }),
          l.on("click", function (e) {
            e.preventDefault(),
              t && YKJS.menuOffcanvas.close_menu(n, c, a, o, s);
          }),
          c.on("click", function (e) {
            e.preventDefault(),
              t && YKJS.menuOffcanvas.close_menu(n, c, a, o, s);
          }),
          YKJS.document.keyup(function (e) {
            27 === e.keyCode &&
              t &&
              (e.preventDefault(),
              YKJS.menuOffcanvas.close_menu(n, c, a, o, s));
          }),
          a.filter("[data-menuanchor]").on("click", "a", function () {
            t && YKJS.menuOffcanvas.close_menu(n, c, a, o, s);
          });
      },
      open_menu: function (e, n, i, a, o) {
        (t = !0),
          "undefined" != typeof gsap &&
            gsap
              .timeline({ defaults: { ease: this.config.easing } })
              .set(YKJS.html, { overflow: "hidden" })
              .to(n, 0.3, { autoAlpha: 1 })
              .fromTo(
                e,
                0.6,
                { x: "100%" },
                { x: 0, visibility: "visible" },
                "-=.3"
              )
              .fromTo(
                a,
                0.3,
                { x: 50, autoAlpha: 0 },
                { x: 0, autoAlpha: 1 },
                "-=.3"
              )
              .fromTo(
                i,
                0.3,
                { x: 50, autoAlpha: 0 },
                { x: 0, autoAlpha: 1, stagger: { each: 0.1, from: "start" } },
                "-=.15"
              )
              .fromTo(
                o,
                0.3,
                { x: 50, autoAlpha: 0 },
                { x: 0, autoAlpha: 1, stagger: { each: 0.1, from: "start" } },
                "-=.15"
              );
      },
      close_menu: function (e, n, i, a, o) {
        (t = !1),
          "undefined" != typeof gsap &&
            gsap
              .timeline({ defaults: { ease: this.config.easing } })
              .set(YKJS.html, { overflow: "inherit" })
              .to(o, 0.3, {
                x: 50,
                autoAlpha: 0,
                stagger: { each: 0.1, from: "end" },
              })
              .to(
                i,
                0.3,
                { x: 50, autoAlpha: 0, stagger: { each: 0.1, from: "end" } },
                "-=.15"
              )
              .to(a, 0.3, { x: 50, autoAlpha: 0 }, "-=.15")
              .to(e, 0.6, { x: "100%" }, "-=.15")
              .set(e, { visibility: "hidden" })
              .to(n, 0.3, { autoAlpha: 0 }, "-=.6");
      },
    }),
      YKJS.menuOffcanvas.init();
  })(jQuery),
  (function (e) {
    "use strict";
    "function" == typeof FastClick && FastClick.attach(document.body);
  })(jQuery),
  (function (e) {
    "use strict";
    if (void 0 !== e.fn.animsition) {
      var t = e(".animsition");
      t.animsition({
        inDuration: 500,
        outDuration: 500,
        linkElement:
          'a:not([target="_blank"]):not([href^="#"]):not([rel="nofollow"]):not([href~="#"]):not([href^=mailto]):not([href^=tel]):not(.sf-with-ul):not(.js-offcanvas-menu-open):not(.js-offcanvas-menu-close):not(.yk-offcanvas-menu__navigation a):not(.yk-navbar-logo)',
        loadingClass: "animsition-loading-2",
        loadingInner:
          '<div class="spinner"><span class="double-bounce-one"></span><span class="double-bounce-two"></span></div>',
      }),
        t.on("animsition.inEnd", function () {
          YKJS.window.trigger("yk.preloader_done"),
            YKJS.html.addClass("yk-is-page-loaded");
        });
    }
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.progressBar = {
      init: function () {
        if ("undefined" != typeof gsap) {
          e(".yk-progress-bar").each(function () {
            var t = e(this),
              n = t.data("final-value") || 0,
              i = t.data("animation-speed") || 0,
              a = 500,
              o = { count: 0 };
            YKJS.window.on("yk.change-slide", function () {
              t.parents(".yk-section").hasClass("active") &&
                ((o.count = 0),
                t
                  .find(".yk-progress-bar__title > .counter")
                  .text(Math.round(o.count)),
                gsap.set(t.find(".yk-progress-bar__bar > span"), { width: 0 }),
                gsap.to(o, i / 1e3 / 2, {
                  count: n,
                  delay: a / 1e3,
                  onUpdate: function () {
                    t.find(".yk-progress-bar__title > .counter").text(
                      Math.round(o.count)
                    );
                  },
                }),
                gsap.to(t.find(".yk-progress-bar__bar > span"), i / 1e3, {
                  width: n + "%",
                  delay: a / 1e3,
                }));
            });
          });
        }
      },
    }),
      YKJS.progressBar.init();
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.projectShowcase = {
      initSlider: function () {
        if ("undefined" != typeof Swiper) {
          var t = e(".yk-project-showcase-slider .swiper-container");
          new Swiper(t, {
            speed: 1e3,
            spaceBetween: 30,
            grabCursor: !0,
            slidesPerView: 1,
            breakpoints: { 575: { slidesPerView: 2 } },
          });
        }
      },
      initParallax: function () {
        if ("undefined" != typeof gsap) {
          var t,
            n,
            i = e(".yk-project-showcase"),
            a = i.find(".yk-project-showcase__items"),
            o = a.find(".yk-project-showcase__item"),
            s = i.find(".yk-project-showcase__images"),
            r = s.find(".yk-project-showcase__image"),
            l = i.outerWidth(!0),
            c = s.outerWidth(!0),
            u = a.outerWidth(),
            d = (l - c) / l;
          (t = u / l - 1),
            (t = (l - u) / l),
            o.on("mouseenter", function () {
              o.removeClass("is-active"),
                r.removeClass("is-active"),
                e(this).addClass("is-active"),
                r.eq(e(this).index()).addClass("is-active");
            }),
            o.eq(0).trigger("mouseenter"),
            YKJS.window.on("mousemove", function (e) {
              n = e.pageX - i.offset().left;
            }),
            gsap.ticker.add(function () {
              gsap.set(a, { x: n * t, ease: "power3.out" }),
                gsap.set(s, { right: n * d, ease: "power3.out" });
            });
        }
      },
    }),
      YKJS.projectShowcase.initSlider(),
      YKJS.projectShowcase.initParallax(),
      YKJS.debounceResize(function () {
        YKJS.projectShowcase.initParallax();
      });
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.testimonialSlider = {
      init: function () {
        if ("undefined" != typeof Swiper) {
          e(".yk-testimonial-slider .swiper-container").each(function () {
            e(this)
              .find(".swiper-wrapper > *")
              .wrap('<div class="swiper-slide">'),
              new Swiper(this, {
                speed: 1e3,
                spaceBetween: 30,
                grabCursor: !0,
                effect: "coverflow",
                slidesPerView: 1,
                navigation: {
                  nextEl: e(".yk-testimonial-slider-controls .next"),
                  prevEl: e(".yk-testimonial-slider-controls .prev"),
                },
                pagination: {
                  el: e(".yk-testimonial-slider-controls .pagination"),
                  clickable: !1,
                  type: "fraction",
                  renderFraction: function (e, t) {
                    return (
                      '<span class="' +
                      e +
                      '"></span><span class="sep">/</span><span class="' +
                      t +
                      '"></span>'
                    );
                  },
                },
              });
          });
        }
      },
    }),
      YKJS.testimonialSlider.init();
  })(jQuery),
  (function (e) {
    "use strict";
    (YKJS.timelineSlider = {
      init: function () {
        if ("undefined" != typeof Swiper) {
          e(".yk-timeline-slider .swiper-container").each(function () {
            e(this)
              .find(".swiper-wrapper > *")
              .wrap('<div class="swiper-slide">'),
              new Swiper(this, {
                speed: 1e3,
                spaceBetween: 0,
                grabCursor: !0,
                slidesPerView: 1,
                navigation: {
                  nextEl: e(".yk-timeline-slider-controls .next"),
                  prevEl: e(".yk-timeline-slider-controls .prev"),
                },
                pagination: {
                  el: e(".yk-timeline-slider-controls .pagination"),
                  clickable: !1,
                  type: "fraction",
                  renderFraction: function (e, t) {
                    return (
                      '<span class="' +
                      e +
                      '"></span><span class="sep">/</span><span class="' +
                      t +
                      '"></span>'
                    );
                  },
                },
              });
          });
        }
      },
    }),
      YKJS.timelineSlider.init();
  })(jQuery);
